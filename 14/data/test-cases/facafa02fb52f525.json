{"uid":"facafa02fb52f525","name":"test_for_authorization","fullName":"tests.test_authorization#test_for_authorization","historyId":"c2c771a19162e1a7f39df202fcfdc4ce","time":{"start":1691590769989,"stop":1691590772144,"duration":2155},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562cf9b7f613 <unknown>\n#1 0x562cf98ab537 <unknown>\n#2 0x562cf98d6588 <unknown>\n#3 0x562cf98d35d9 <unknown>\n#4 0x562cf9913643 <unknown>\n#5 0x562cf9912d8f <unknown>\n#6 0x562cf990a803 <unknown>\n#7 0x562cf98de68b <unknown>\n#8 0x562cf98df42e <unknown>\n#9 0x562cf9b40c28 <unknown>\n#10 0x562cf9b44af7 <unknown>\n#11 0x562cf9b4f01c <unknown>\n#12 0x562cf9b45723 <unknown>\n#13 0x562cf9b14457 <unknown>\n#14 0x562cf9b69628 <unknown>\n#15 0x562cf9b697b7 <unknown>\n#16 0x562cf9b78483 <unknown>\n#17 0x7fcf4b6a6b43 <unknown>","statusTrace":"remote_browser = None\n\n    @allure.tag('web')\n    @allure.severity(Severity.BLOCKER)\n    @allure.label('owner', 'Serov')\n    @allure.feature('Issues names')\n    @allure.story('Issues in public repository can be found')\n    @allure.link('https://github.com', name='Testing')\n    def test_for_authorization(remote_browser):\n        with allure.step('Открытие браузера'):\n>           main_page.open('https://redbasset.tech/')\n\ntests/test_authorization.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_site_page.py:7: in open\n    browser.open(value)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:49: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:54: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:206: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:291: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbf7380f90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x562cf9b697b7 \\\\u003Cunknown>\\\\n#16 0x562cf9b78483 \\\\u003Cunknown>\\\\n#17 0x7fcf4b6a6b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x562cf9b7f613 <unknown>\nE       #1 0x562cf98ab537 <unknown>\nE       #2 0x562cf98d6588 <unknown>\nE       #3 0x562cf98d35d9 <unknown>\nE       #4 0x562cf9913643 <unknown>\nE       #5 0x562cf9912d8f <unknown>\nE       #6 0x562cf990a803 <unknown>\nE       #7 0x562cf98de68b <unknown>\nE       #8 0x562cf98df42e <unknown>\nE       #9 0x562cf9b40c28 <unknown>\nE       #10 0x562cf9b44af7 <unknown>\nE       #11 0x562cf9b4f01c <unknown>\nE       #12 0x562cf9b45723 <unknown>\nE       #13 0x562cf9b14457 <unknown>\nE       #14 0x562cf9b69628 <unknown>\nE       #15 0x562cf9b697b7 <unknown>\nE       #16 0x562cf9b78483 <unknown>\nE       #17 0x7fcf4b6a6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"remote_browser","time":{"start":1691590769989,"stop":1691590769989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562cf9b7f613 <unknown>\n#1 0x562cf98ab537 <unknown>\n#2 0x562cf98d6588 <unknown>\n#3 0x562cf98d35d9 <unknown>\n#4 0x562cf9913643 <unknown>\n#5 0x562cf9912d8f <unknown>\n#6 0x562cf990a803 <unknown>\n#7 0x562cf98de68b <unknown>\n#8 0x562cf98df42e <unknown>\n#9 0x562cf9b40c28 <unknown>\n#10 0x562cf9b44af7 <unknown>\n#11 0x562cf9b4f01c <unknown>\n#12 0x562cf9b45723 <unknown>\n#13 0x562cf9b14457 <unknown>\n#14 0x562cf9b69628 <unknown>\n#15 0x562cf9b697b7 <unknown>\n#16 0x562cf9b78483 <unknown>\n#17 0x7fcf4b6a6b43 <unknown>","statusTrace":"remote_browser = None\n\n    @allure.tag('web')\n    @allure.severity(Severity.BLOCKER)\n    @allure.label('owner', 'Serov')\n    @allure.feature('Issues names')\n    @allure.story('Issues in public repository can be found')\n    @allure.link('https://github.com', name='Testing')\n    def test_for_authorization(remote_browser):\n        with allure.step('Открытие браузера'):\n>           main_page.open('https://redbasset.tech/')\n\ntests/test_authorization.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_site_page.py:7: in open\n    browser.open(value)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:49: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:54: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:206: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:291: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbf7380f90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x562cf9b697b7 \\\\u003Cunknown>\\\\n#16 0x562cf9b78483 \\\\u003Cunknown>\\\\n#17 0x7fcf4b6a6b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x562cf9b7f613 <unknown>\nE       #1 0x562cf98ab537 <unknown>\nE       #2 0x562cf98d6588 <unknown>\nE       #3 0x562cf98d35d9 <unknown>\nE       #4 0x562cf9913643 <unknown>\nE       #5 0x562cf9912d8f <unknown>\nE       #6 0x562cf990a803 <unknown>\nE       #7 0x562cf98de68b <unknown>\nE       #8 0x562cf98df42e <unknown>\nE       #9 0x562cf9b40c28 <unknown>\nE       #10 0x562cf9b44af7 <unknown>\nE       #11 0x562cf9b4f01c <unknown>\nE       #12 0x562cf9b45723 <unknown>\nE       #13 0x562cf9b14457 <unknown>\nE       #14 0x562cf9b69628 <unknown>\nE       #15 0x562cf9b697b7 <unknown>\nE       #16 0x562cf9b78483 <unknown>\nE       #17 0x7fcf4b6a6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","steps":[{"name":"Открытие браузера","time":{"start":1691590769989,"stop":1691590772142,"duration":2153},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562cf9b7f613 <unknown>\n#1 0x562cf98ab537 <unknown>\n#2 0x562cf98d6588 <unknown>\n#3 0x562cf98d35d9 <unknown>\n#4 0x562cf9913643 <unknown>\n#5 0x562cf9912d8f <unknown>\n#6 0x562cf990a803 <unknown>\n#7 0x562cf98de68b <unknown>\n#8 0x562cf98df42e <unknown>\n#9 0x562cf9b40c28 <unknown>\n#10 0x562cf9b44af7 <unknown>\n#11 0x562cf9b4f01c <unknown>\n#12 0x562cf9b45723 <unknown>\n#13 0x562cf9b14457 <unknown>\n#14 0x562cf9b69628 <unknown>\n#15 0x562cf9b697b7 <unknown>\n#16 0x562cf9b78483 <unknown>\n#17 0x7fcf4b6a6b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/RedBasset/RedBasset/tests/test_authorization.py\", line 16, in test_for_authorization\n    main_page.open('https://redbasset.tech/')\n  File \"/home/runner/work/RedBasset/RedBasset/pages/main_site_page.py\", line 7, in open\n    browser.open(value)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 49, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 54, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 206, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 291, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"9550c835dc857cd1","name":"stderr","source":"9550c835dc857cd1.txt","type":"text/plain","size":675}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"remote_browser::0","time":{"start":1691590772237,"stop":1691590773115,"duration":878},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55f0ec037613 <unknown>\n#1 0x55f0ebd63537 <unknown>\n#2 0x55f0ebd8e588 <unknown>\n#3 0x55f0ebd8b5d9 <unknown>\n#4 0x55f0ebdcb643 <unknown>\n#5 0x55f0ebdcad8f <unknown>\n#6 0x55f0ebdc2803 <unknown>\n#7 0x55f0ebd9668b <unknown>\n#8 0x55f0ebd9742e <unknown>\n#9 0x55f0ebff8c28 <unknown>\n#10 0x55f0ebffcaf7 <unknown>\n#11 0x55f0ec00701c <unknown>\n#12 0x55f0ebffd723 <unknown>\n#13 0x55f0ebfcc457 <unknown>\n#14 0x55f0ec021628 <unknown>\n#15 0x55f0ec0217b7 <unknown>\n#16 0x55f0ec030483 <unknown>\n#17 0x7fcb4fc07b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/RedBasset/RedBasset/tests/conftest.py\", line 23, in remote_browser\n    browser.quit()\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1205, in quit\n    self.driver.quit()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 49, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 54, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 206, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 291, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"feature","value":"Issues names"},{"name":"tag","value":"web"},{"name":"severity","value":"blocker"},{"name":"owner","value":"Serov"},{"name":"story","value":"Issues in public repository can be found"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_authorization"},{"name":"host","value":"fv-az246-167"},{"name":"thread","value":"2163-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_authorization"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Testing","url":"https://github.com","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","owner":"Serov","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":2,"unknown":0,"total":7},"items":[{"uid":"e87a444fea995f52","reportUrl":"https://SerovVl.github.io/RedBasset/13//#testresult/e87a444fea995f52","status":"passed","time":{"start":1691478565774,"stop":1691478573479,"duration":7705}},{"uid":"ff0be894724b4f72","reportUrl":"https://VISerov.github.io/RedBasset/12//#testresult/ff0be894724b4f72","status":"passed","time":{"start":1691476970922,"stop":1691476979278,"duration":8356}},{"uid":"2b203bd4a22726ce","reportUrl":"https://VISerov.github.io/RedBasset/11//#testresult/2b203bd4a22726ce","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='none', port=80): Max retries exceeded with url: /session (Caused by NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x7f13ad461210>: Failed to resolve 'none' ([Errno -3] Temporary failure in name resolution)\"))","time":{"start":1691476107671,"stop":1691476107671,"duration":0}},{"uid":"1cfd6a7639699854","reportUrl":"https://VISerov.github.io/RedBasset/8//#testresult/1cfd6a7639699854","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=4444): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f52dce39310>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1691353789961,"stop":1691353789961,"duration":0}},{"uid":"5aa0b7b8da65f965","reportUrl":"https://VISerov.github.io/RedBasset/5//#testresult/5aa0b7b8da65f965","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='192.168.1.5', port=8080): Max retries exceeded with url: /wd/hub/session (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x7fa99c1f5710>, 'Connection to 192.168.1.5 timed out. (connect timeout=None)'))","time":{"start":1691317417466,"stop":1691317417466,"duration":0}},{"uid":"97038f88132b0a5a","reportUrl":"https://VISerov.github.io/RedBasset/4//#testresult/97038f88132b0a5a","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557a6a755783 <unknown>\n#1 0x557a6a481917 <unknown>\n#2 0x557a6a4ac978 <unknown>\n#3 0x557a6a4a99c9 <unknown>\n#4 0x557a6a4e9a13 <unknown>\n#5 0x557a6a4e915f <unknown>\n#6 0x557a6a4e0bd3 <unknown>\n#7 0x557a6a4b4a7b <unknown>\n#8 0x557a6a4b581e <unknown>\n#9 0x557a6a716e98 <unknown>\n#10 0x557a6a71ad67 <unknown>\n#11 0x557a6a72532c <unknown>\n#12 0x557a6a71b993 <unknown>\n#13 0x557a6a6ea827 <unknown>\n#14 0x557a6a73f8a8 <unknown>\n#15 0x557a6a73fa36 <unknown>\n#16 0x557a6a74e5f3 <unknown>\n#17 0x7fc26d69db43 <unknown>","time":{"start":1690892299787,"stop":1690892301764,"duration":1977}}]},"tags":["web"]},"source":"facafa02fb52f525.json","parameterValues":[]}